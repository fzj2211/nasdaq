{"version":3,"sources":["components/chart.jsx","components/multiSelector.jsx","App.js","serviceWorker.js","index.js"],"names":["Chart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this$props","data","title","length","react_default","a","createElement","className","nivo_line_esm","margin","top","right","bottom","left","xScale","type","yScale","stacked","min","max","axisTop","axisRight","axisBottom","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","axisLeft","colors","scheme","pointSize","pointColor","theme","pointBorderWidth","pointBorderColor","from","pointLabel","pointLabelYOffset","useMesh","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","style","itemBackground","React","Component","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","width","names","MultiSelector","itemName","event","onChange","setState","target","value","FormControl","InputLabel","htmlFor","Select","multiple","handleChange","bind","input","Input","id","renderValue","selected","map","Chip","key","label","name","MenuItem","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","chartList","dataList","Array","fill","TabPanel","children","index","other","objectWithoutProperties","Typography","assign","component","role","hidden","concat","aria-labelledby","Box","p","a11yProps","aria-controls","App","newValue","_this2","tickers","join","fetch","then","res","json","result","catch","e","console","log","_this3","CssBaseline","Container","maxWidth","AppBar","position","color","Tabs","indicatorColor","textColor","variant","scrollButtons","aria-label","Tab","item","multiSelector_MultiSelector","chart_Chart","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1b630126.chunk.js","sourcesContent":["import React from 'react';\nimport '../style/style.css';\nimport { ResponsiveLine } from '@nivo/line';\n\nexport default class Chart extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state={};\n  }\n\n  render() {\n    const { data, title } = this.props;\n    if (!data || data.length <= 0) {\n      return <div>No data received!</div>\n    }\n    return (\n      <div className=\"chart\">\n        {data.length > 0 &&\n          <ResponsiveLine\n            data={data}\n            margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\n            xScale={{ type: 'point' }}\n            yScale={{ type: 'linear', stacked: false, min: 'auto', max: 'auto' }}\n            axisTop={null}\n            axisRight={null}\n            axisBottom={{\n                orient: 'bottom',\n                tickSize: 5,\n                tickPadding: 5,\n                tickRotation: 0,\n                legend: 'date',\n                legendOffset: 36,\n                legendPosition: 'middle'\n            }}\n            axisLeft={{\n                orient: 'left',\n                tickSize: 5,\n                tickPadding: 5,\n                tickRotation: 0,\n                legend: title,\n                legendOffset: -40,\n                legendPosition: 'middle'\n            }}\n            colors={{ scheme: 'nivo' }}\n            pointSize={10}\n            pointColor={{ theme: 'background' }}\n            pointBorderWidth={2}\n            pointBorderColor={{ from: 'serieColor' }}\n            pointLabel=\"y\"\n            pointLabelYOffset={-12}\n            useMesh={true}\n            legends={[\n                {\n                    anchor: 'bottom-right',\n                    direction: 'column',\n                    justify: false,\n                    translateX: 100,\n                    translateY: 0,\n                    itemsSpacing: 0,\n                    itemDirection: 'left-to-right',\n                    itemWidth: 80,\n                    itemHeight: 20,\n                    itemOpacity: 0.75,\n                    symbolSize: 12,\n                    symbolShape: 'circle',\n                    symbolBorderColor: 'rgba(0, 0, 0, .5)',\n                    effects: [\n                        {\n                            on: 'hover',\n                            style: {\n                                itemBackground: 'rgba(0, 0, 0, .03)',\n                                itemOpacity: 1\n                            }\n                        }\n                    ]\n                }\n            ]}\n          />\n        }\n      </div>\n    );\n  }\n}\n\n","import React from 'react';\nimport { typography } from '@material-ui/system';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Chip from '@material-ui/core/Chip';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst names = [\n  'aapl',\n  'gluu',\n  'mu',\n  'ntap',\n  'msft',\n  'intc',\n  'znga',\n  'csco',\n  'siri',\n  'jd',\n  'fb',\n  'nvda',\n  'bl',\n  'ftnt',\n  'chrs',\n  'loco',\n  'catm',\n  'cnce',\n  'fizz',\n  'acor',\n  'fldm',\n  'sptn',\n  'cent',\n  'xent',\n  'adap',\n  'gpro',\n  'brks',\n  'sgms',\n  'iova',\n  'aaon',\n  'eigi',\n  'amzn',\n  'nflx',\n  'tsla'\n];\n\nexport default class MultiSelector extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      itemName:[]\n    }\n  }\n  handleChange(event) {\n    const {onChange} = this.props;\n    this.setState({\n      itemName:event.target.value\n    })\n    onChange(event.target.value);\n  }\n\n  render() {\n    const {itemName} = this.state;\n    return (\n      <div className=\"multiSelector\">\n        <FormControl className=\"formControl\">\n          <InputLabel htmlFor=\"select-multiple-chip\">Select Tickers</InputLabel>\n          <Select\n            multiple\n            value={itemName}\n            onChange={this.handleChange.bind(this)}\n            input={<Input id=\"select-multiple-chip\" />}\n            renderValue={selected => (\n              <div className=\"chips\">\n                {selected.map(value => (\n                  <Chip key={value} label={value} className=\"chip\" />\n                ))}\n              </div>\n            )}\n            MenuProps={MenuProps}\n          >\n            {names.map(name => (\n              <MenuItem key={name} value={name} style={{ fontWeight: itemName.indexOf(name) === -1 ? typography.fontWeightRegular : typography.fontWeightMedium,\n  }}>\n                {name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport './App.css';\nimport PropTypes from 'prop-types';\nimport Chart from './components/chart';\nimport MultiSelector from './components/multiSelector';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\n\nconst chartList = ['openPrice', 'closePrice', 'PERatio', 'SV', 'EPS', 'TH', 'TL'];\nconst dataList = new Array(chartList.length).fill([]);\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      <Box p={3}>{children}</Box>\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nexport default class App extends React.Component {\n\n  handleChange(event, newValue) {\n    this.setState({value:newValue});\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0\n    }\n  }\n\n  onChange(index, value) {\n    if (index !== 0) {\n      return;\n    }\n    if (value.length >= 0) {\n      let tickers = value.join(',');\n      fetch('http://47.99.220.232:3389/api/stocks/chart?tickers=' + tickers)\n      .then(res => res.json())\n      .then(result => {\n        dataList[index] = result.data;\n        this.setState({});\n      }).catch(e => console.log('error:', e))\n    }\n  }\n\n  render() {\n    let value = this.state.value;\n    return (\n      <div className=\"App\">\n        <CssBaseline />\n        <Container maxWidth=\"lg\">\n          <AppBar position=\"static\" color=\"default\">\n            <Tabs\n              value={value}\n              onChange={this.handleChange.bind(this)}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              variant=\"scrollable\"\n              scrollButtons=\"auto\"\n              aria-label=\"scrollable auto tabs example\"\n            >\n              <Tab label=\"Open Price\" {...a11yProps(0)} />\n              <Tab label=\"Close Price\" {...a11yProps(1)} />\n              <Tab label=\"P/E Ratio\" {...a11yProps(2)} />\n              <Tab label=\"Share Volume\" {...a11yProps(3)} />\n              <Tab label=\"Earnings Per Share (EPS)\" {...a11yProps(4)} />\n              <Tab label=\"Today's High\" {...a11yProps(5)} />\n              <Tab label=\"Today's Low\" {...a11yProps(6)} />\n            </Tabs>\n          </AppBar>\n          {chartList.map((item, index) => \n                          <TabPanel key={'key' + index} value={value} index={index}>\n                            <MultiSelector onChange={this.onChange.bind(this, index)} />\n                            <Chart data={dataList[index]} title={item}/>\n                          </TabPanel>\n                      )}\n        </Container>\n      </div>\n    );\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}